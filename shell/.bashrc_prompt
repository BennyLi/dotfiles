add_date_and_time_on_the_right_to_prompt() {
  RESET_COLORS="\e[0m"

  RED_STEP0_BG="\e[48;2;251;1;30m"
  RED_STEP1_BG="\e[48;2;206;0;24m"
  RED_STEP2_BG="\e[48;2;128;0;15m"
  RED_STEP3_BG="\e[48;2;53;0;6m"

  BLUE_STEP0_BG="\e[48;2;111;180;210m"
  BLUE_STEP1_BG="\e[48;2;45;123;156m"
  BLUE_STEP2_BG="\e[48;2;9;80;111m"
  BLUE_STEP3_BG="\e[48;2;1;44;62m"

  GREY_STEP0_BG="\e[48;2;176;176;176m"
  GREY_STEP1_BG="\e[48;2;111;111;111m"
  GREY_STEP2_BG="\e[48;2;70;70;70m"
  GREY_STEP3_BG="\e[48;2;30;30;30m"

  BLACK265_232_FG="\e[38;5;232m"
  WHITE265_255_FG_BOLD="\e[1;38;5;255m"

  # Source: https://superuser.com/questions/187455/right-align-part-of-prompt/1203400#1203400

  local LAST_EXIT_CODE="$1"

  if [[ "$LAST_EXIT_CODE" == "0" ]]
  then
    LAST_EXIT_STRING="üëå"
  else
    LAST_EXIT_STRING="$RED_STEP3_BG $RED_STEP2_BG $RED_STEP1_BG $RED_STEP0_BG  $WHITE265_255_FG_BOLD$LAST_EXIT_CODE $RED_STEP0_BG $RED_STEP1_BG $RED_STEP2_BG $RED_STEP3_BG $RESET_COLORS ‚ùå$RESET_COLORS"
  fi

  # Add the date and time on the right side
  DATE_AND_TIME_STRING="$GREY_STEP3_BG $GREY_STEP2_BG $GREY_STEP1_BG $GREY_STEP0_BG  üï∞  $BLACK265_232_FG%(%b %d %H:%M:%S)T  $RESET_COLORS"
  printf -v PS1RHS "$LAST_EXIT_STRING $DATE_AND_TIME_STRING" -1 # current time

  # Strip ANSI commands before counting length
  # From: https://www.commandlinefu.com/commands/view/12043/remove-color-special-escape-ansi-codes-from-text-with-sed
  PS1RHS_stripped=$(sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" <<<"$PS1RHS")

  # Reference: https://en.wikipedia.org/wiki/ANSI_escape_code
  local Save='\e[s' # Save cursor position
  local Rest='\e[u' # Restore cursor to save point

  # Save cursor position, jump to right hand edge, then go left N columns where
  # N is the length of the printable RHS string. Print the RHS string, then
  # return to the saved position and print the LHS prompt.

  # Note: "\[" and "\]" are used so that bash can calculate the number of
  # printed characters so that the prompt doesn't do strange things when
  # editing the entered text.

  PS1="\[${Save}\e[${COLUMNS:-$(tput cols)}C\e[${#PS1RHS_stripped}D${PS1RHS}${Rest}\]${PS1}"
}

setup_prompt() {
  local LAST_EXIT="$?"             # This needs to be first

  printf -v WORKDIR "$BLUE_STEP0_BG üêö $BLACK265_232_FG\\w > $BLUE_STEP0_BG $BLUE_STEP1_BG $BLUE_STEP2_BG $BLUE_STEP3_BG $RESET_COLORS"
  PS1="$WORKDIR \n \$ "
  add_date_and_time_on_the_right_to_prompt "$LAST_EXIT"

  # Add an extra newline before the prompt to seperate stuff from previous outputs
  PS1="\n$PS1"
}

# Reset the cursor to the default block before starting any progam
PS0="\e[2 q"

# Initial prompt setup ...
setup_prompt
# ... and after each command
PROMPT_COMMAND=setup_prompt
